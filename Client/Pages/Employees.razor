@page "/Employees"
@using BlazorApp.Shared
@inject HttpClient Http


<h1>Employees</h1>

<button @onclick="CreateCase"></button>

@if (employees == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class=table-scrollable>
        <table class="table">
            <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>No. of Warrants</th>
                <th>Ownership</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var employee in employees)
            {
                <tr class="@(employee == selectedEmployee ? "table-active" : "")"
                    onclick="() => SelectEmployee(employee)">
                    <td>@employee.FullName</td>
                    <td>@employee.Email</td>
                    <td>@employee.Address</td>
                    <td>@employee.PhoneNumber</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}


@code {
    private Employee[] employees = [];
    private Employee? selectedEmployee;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("Initializing employees page!");
        try
        {
            employees = await Http.GetFromJsonAsync<Employee[]>("/api/GetEmployee") ?? [];
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }

    void SelectEmployee(Employee employee)
    {
        Console.WriteLine("employee selected!");
        selectedEmployee = selectedEmployee == employee ? null : employee;
    }

    private async void CreateCase()
    {
        try
        {
            await Http.PostAsync($"/api/CreateCase?id={selectedEmployee.Id}", null);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }

}