// <auto-generated />
using System;
using Api.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250518175559_m2")]
    partial class m2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorApp.Shared.ConfirmationLetter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsSent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("bit");

                    b.Property<Guid>("WarrantGrantCaseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ConfirmationLetters");
                });

            modelBuilder.Entity("BlazorApp.Shared.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa1"),
                            Address = "1 Main Street",
                            Cpr = "0101010001",
                            Email = "alice@example.com",
                            FullName = "Alice Andersen",
                            PhoneNumber = "12345678"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa2"),
                            Address = "2 Main Street",
                            Cpr = "0202020002",
                            Email = "bob@example.com",
                            FullName = "Bob Bentsen",
                            PhoneNumber = "23456789"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa3"),
                            Address = "3 Main Street",
                            Cpr = "0303030003",
                            Email = "clara@example.com",
                            FullName = "Clara Christensen",
                            PhoneNumber = "34567890"
                        },
                        new
                        {
                            Id = new Guid("aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaa4"),
                            Address = "4 Main Street",
                            Cpr = "0404040004",
                            Email = "david@example.com",
                            FullName = "David Dahl",
                            PhoneNumber = "45678901"
                        });
                });

            modelBuilder.Entity("BlazorApp.Shared.WarrantAllocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("ExercisePeriodEnd")
                        .HasColumnType("date");

                    b.Property<DateOnly>("ExercisePeriodStart")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ExercisedOnDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FullVestingDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("GrantDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsExercised")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("StrikePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WarrantAllocations");
                });

            modelBuilder.Entity("BlazorApp.Shared.WarrantGrantCase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConfirmationLetterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsApprovedByBoard")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGranted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegisteredBySkat")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("WarrantAllocationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ConfirmationLetterId")
                        .IsUnique();

                    b.HasIndex("EmployeeId");

                    b.ToTable("WarrantGrantCases");
                });

            modelBuilder.Entity("BlazorApp.Shared.WarrantAllocation", b =>
                {
                    b.HasOne("BlazorApp.Shared.Employee", "Employee")
                        .WithMany("WarrantAllocations")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BlazorApp.Shared.WarrantGrantCase", b =>
                {
                    b.HasOne("BlazorApp.Shared.ConfirmationLetter", "ConfirmationLetter")
                        .WithOne()
                        .HasForeignKey("BlazorApp.Shared.WarrantGrantCase", "ConfirmationLetterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorApp.Shared.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConfirmationLetter");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("BlazorApp.Shared.Employee", b =>
                {
                    b.Navigation("WarrantAllocations");
                });
#pragma warning restore 612, 618
        }
    }
}
